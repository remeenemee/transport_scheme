import streamlit as st
import folium
from streamlit_folium import st_folium
import pandas as pd
from PIL import Image
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
from utils import (
    log_error, log_info, log_warning, log_api_error, 
    geocode_address_cached, init_ors_client, get_route_ors,
    MATERIAL_COLORS, AVAILABLE_COLORS, MATERIALS
)
from export_utils import export_to_excel, save_map_screenshot
from debug_ui import display_debug_sidebar, display_error_stats

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(layout="wide", page_title="–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è —Å—Ö–µ–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏", page_icon="üöö")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ ---
if 'delivery_data' not in st.session_state:
    st.session_state.delivery_data = []

if 'geocode_cache' not in st.session_state:
    st.session_state.geocode_cache = {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∞ –æ—à–∏–±–æ–∫
if 'error_log' not in st.session_state:
    st.session_state.error_log = []

if 'debug_mode' not in st.session_state:
    st.session_state.debug_mode = False

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –æ—Ç–ª–∞–¥–∫–∏
    if 'show_debug' not in st.session_state:
        st.session_state.show_debug = False

if 'ors_api_key' not in st.session_state:
    st.session_state.ors_api_key = ""
    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á –∏–∑ secrets
    try:
        if 'api_keys' in st.secrets and 'ors_api_key' in st.secrets['api_keys']:
            st.session_state.ors_api_key = st.secrets['api_keys']['ors_api_key']
            log_info(st.session_state, "API –∫–ª—é—á –ø–æ–ª—É—á–µ–Ω –∏–∑ secrets")
    except Exception as e:
        log_warning(st.session_state, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á –∏–∑ secrets")

# –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç ORS –µ—Å–ª–∏ API-–∫–ª—é—á —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
ors_client = init_ors_client(st.session_state)

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ---
st.title("üöö –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è —Å—Ö–µ–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")

# –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
col1, col2 = st.columns([3, 1])
with col2:
    st.link_button(
        "–°—Å—ã–ª–∫–∞ –Ω–∞ github",
        "https://github.com/remeenemee/transport_scheme",
        use_container_width=True,
        type="primary"
    )

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–ø—Ä–∞–≤–∫–∏
with st.expander("üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"):
    st.markdown("""
    ## üìã –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è

    ### 1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    - –í –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    - –û—Ç–º–µ—Ç—å—Ç–µ –≥–∞–ª–æ—á–∫—É "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞", –µ—Å–ª–∏ –Ω—É–∂–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ

    ### 1.1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –ª–∏–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞
    - –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ 10 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ
    - –¶–≤–µ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –ª–∏–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ –∏ –≤ –ª–µ–≥–µ–Ω–¥–µ

    ### 2Ô∏è‚É£ –û–ø–∏—à–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç
    - –£–∫–∞–∂–∏—Ç–µ, –¥–ª—è –∫–∞–∫–∏—Ö —Ä–∞–±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–∞—Ç–µ—Ä–∏–∞–ª
    - **–ü—Ä–∏–º–µ—Ä—ã**: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ—Ä–æ–∂–Ω–æ–π –æ–¥–µ–∂–¥—ã, –º–æ–Ω—Ç–∞–∂ —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–∞

    ### 3Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    - –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏

    ### 4Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    - **–¢–µ–∫—Å—Ç–æ–º**: –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–û–†–û–î, –£–õ–ò–¶–ê, –î–û–ú
    - **–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏**: –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —á–µ–∫–±–æ–∫—Å "–í–≤–µ—Å—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤—Ä—É—á–Ω—É—é"

    ### 5Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    - –ú–µ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞)

    ### 6Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
    - –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ

    > üí° **–°–æ–≤–µ—Ç**: –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Google –∏–ª–∏ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã
    """)

    st.markdown("""
    ## üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö

    - **üì• Excel**: –ù–∞–∂–º–∏—Ç–µ "üì• –°–∫–∞—á–∞—Ç—å Excel-—Ñ–∞–π–ª"
    - **üó∫Ô∏è –ö–∞—Ä—Ç–∞**: –ù–∞–∂–º–∏—Ç–µ "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç—É" –∏ —Å–∫–∞—á–∞–π—Ç–µ HTML-—Ñ–∞–π–ª
    """)

# --- –ó–∞–ø—Ä–æ—Å API-–∫–ª—é—á–∞, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ---
if not st.session_state.ors_api_key:
    st.warning("‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º API-–∫–ª—é—á OpenRouteService")

    with st.form("api_key_form"):
        api_key = st.text_input(
            "–í–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á OpenRouteService",
            help="–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–∞ —Å–∞–π—Ç–µ https://openrouteservice.org/dev/#/signup",
            type="password"
        )

        sample_key = st.checkbox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–º–æ-–∫–ª—é—á")

        submit = st.form_submit_button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")

        if submit:
            if sample_key:
                api_key = ""

            if api_key:
                st.session_state.ors_api_key = api_key
                try:
                    ors_client = init_ors_client(st.session_state, api_key)
                    st.success("‚úÖ API-–∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                    st.rerun()
                except Exception as e:
                    log_api_error(st.session_state, "OpenRouteService", e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API-–∫–ª—é—á–∞")
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API-–∫–ª—é—á–∞: {str(e)}")
            else:
                st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á")

    st.markdown("""
    ### –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API-–∫–ª—é—á OpenRouteService
    1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç [OpenRouteService](https://openrouteservice.org/dev/#/signup)
    2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–∫–∫–∞—É–Ω—Ç
    3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "Dashboard" –∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ–ª–µ –≤—ã—à–µ
    """)

    st.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ –≤–≤–æ–¥–∞ API-–∫–ª—é—á–∞

# --- –ü–∞–Ω–µ–ª—å –æ—Ç–ª–∞–¥–∫–∏ ---
display_debug_sidebar(st.session_state)

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ---
if 'page' not in st.session_state:
    st.session_state.page = "manual"  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

if st.session_state.page == "manual":
    st.header("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤—Ä—É—á–Ω—É—é")

    col1, col2 = st.columns(2)

    with col1:
        use_custom_material = st.checkbox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞", key="custom_mat_check")

        if use_custom_material:
            material = st.text_input("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞", key="custom_mat")
        else:
            material = st.selectbox("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞", MATERIALS, key="mat")

        color_name = st.selectbox("–¶–≤–µ—Ç –ª–∏–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞", list(AVAILABLE_COLORS.keys()), key="color_select")
        selected_color = AVAILABLE_COLORS[color_name]

        # –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
        st.markdown(f"<div style='background-color: {selected_color}; width: 100%; height: 20px; border-radius: 5px;'></div>", unsafe_allow_html=True)

        work_type = st.text_input(
            "–í–∏–¥ —Ä–∞–±–æ—Ç",
            value="–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ—Ä–æ–∂–Ω–æ–π –æ–¥–µ–∂–¥—ã",
            help="–ù–∞–ø—Ä–∏–º–µ—Ä: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞—Å—ã–ø–∏, –æ—Å–Ω–æ–≤–∞–Ω–∏—è, –ø–æ–¥—Å—Ç–∏–ª–∞—é—â–µ–≥–æ —Å–ª–æ—è"
        )
        supplier_name = st.text_input(
            "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞",
            value="–ì–ü–ö–û \"–î–≠–ü ‚Ññ2\"",
            help="–ù–∞–ø—Ä–∏–º–µ—Ä: –û–û–û \"–°–ê–ù–¢–ï–†–ú–û\""
        )
        supplier_address = st.text_area(
            "–ê–¥—Ä–µ—Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞",
            value="–ü—Ä–∞–≤–¥–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, –≥–æ—Ä–æ–¥ –ü—Ä–∞–≤–¥–∏–Ω—Å–∫, –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è —É–ª., –¥.1",
            height=100
        )

    with col2:
        st.subheader("üìç –ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞ (–º–µ—Å—Ç–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è)")
        use_object_coords = st.checkbox("–í–≤–µ—Å—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞ –≤—Ä—É—á–Ω—É—é")
        if use_object_coords:
            obj_coord_input = st.text_input("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞ (—à–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞)", "")
        else:
            object_address = st.text_input(
                "–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞",
                value="–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª., –ì—É—Ä—å–µ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω, –ø–æ—Å. –ù–µ–≤—Å–∫–æ–µ, —É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞, –¥. –ó–î. 229"
            )

    # --- –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ---
    if st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"):
        log_info(st.session_state, "–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞")

        # –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
        if use_object_coords:
            try:
                lat, lon = map(float, [x.strip() for x in obj_coord_input.split(",")])
                if -90 <= lat <= 90 and -180 <= lon <= 180:
                    obj_coords = (lat, lon)
                    obj_full_addr = f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat:.5f}, {lon:.5f}"
                    log_info(st.session_state, f"–í–≤–µ–¥–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞ –≤—Ä—É—á–Ω—É—é: {obj_coords}")
                else:
                    error_msg = "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞ –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞."
                    log_error(st.session_state, error_msg)
                    st.error(error_msg)
                    st.stop()
            except Exception as e:
                error_msg = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –æ–±—ä–µ–∫—Ç–∞"
                log_error(st.session_state, error_msg, details=str(e))
                st.error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞: –Ω–∞–ø—Ä–∏–º–µ—Ä, 54.7100, 20.4800")
                st.stop()
        else:
            obj_coords, obj_full_addr = geocode_address_cached(st.session_state, object_address)
            if obj_coords is None:
                error_msg = f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞: {object_address}"
                log_error(st.session_state, error_msg)
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é.")
                st.stop()

        # –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        use_supplier_coords = st.checkbox("–í–≤–µ—Å—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤—Ä—É—á–Ω—É—é", key="supp_coords")
        if use_supplier_coords:
            supp_coord_input = st.text_input("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (—à–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞)", key="supp_input")
            try:
                lat, lon = map(float, [x.strip() for x in supp_coord_input.split(",")])
                if -90 <= lat <= 90 and -180 <= lon <= 180:
                    sup_coords = (lat, lon)
                    sup_full_addr = f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat:.5f}, {lon:.5f}"
                    log_info(st.session_state, f"–í–≤–µ–¥–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤—Ä—É—á–Ω—É—é: {sup_coords}")
                else:
                    error_msg = "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞."
                    log_error(st.session_state, error_msg)
                    st.error(error_msg)
                    st.stop()
            except Exception as e:
                error_msg = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
                log_error(st.session_state, error_msg, details=str(e))
                st.error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: –Ω–∞–ø—Ä–∏–º–µ—Ä, 54.7100, 20.4800")
                st.stop()
        else:
            sup_coords, sup_full_addr = geocode_address_cached(st.session_state, supplier_address)
            if sup_coords is None:
                error_msg = f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {supplier_address}"
                log_error(st.session_state, error_msg)
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é.")
                st.stop()

        # –†–∞—Å—á—ë—Ç –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ –¥–æ—Ä–æ–≥–∞–º
        log_info(st.session_state, "–ù–∞—á–∞–ª–æ —Ä–∞—Å—á—ë—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞")
        route_coords, road_distance = get_route_ors(st.session_state, ors_client, sup_coords, obj_coords)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        idx = len(st.session_state.delivery_data) + 1
        st.session_state.delivery_data.append({
            "‚Ññ –ø/–ø": idx,
            "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞": material,
            "% –æ—Ç –æ–±—â–µ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏": 100,
            "–í–∏–¥ —Ä–∞–±–æ—Ç": work_type,
            "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞": supplier_name,
            "–ê–¥—Ä–µ—Å": sup_full_addr,
            "–í–∏–¥ \"—Ñ—Ä–∞–Ω–∫–æ\" –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞": "-",
            "–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ %": "-",
            "–°—Ç–∞–Ω—Ü–∏–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–±—ã–≤–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª": obj_full_addr,
            "–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏, –∫–º": road_distance,
            "–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ %": 100,
            "–°—Ä–µ–¥–Ω—è—è –¥–∞–ª—å–Ω–æ—Å—Ç—å –≤–æ–∑–∫–∏, –∫–º": road_distance,
            "–¶–≤–µ—Ç": selected_color,
            "supplier_coords": sup_coords,
            "object_coords": obj_coords,
            "route_coords": route_coords
        })

        log_info(st.session_state, f"–ü–æ—Å—Ç–∞–≤—â–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {supplier_name}, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {road_distance} –∫–º")

        success_msg = f"‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ ¬´{supplier_name}¬ª –¥–æ–±–∞–≤–ª–µ–Ω! –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ "
        if route_coords:
            success_msg += f"–ø–æ –¥–æ—Ä–æ–≥–∞–º: {road_distance} –∫–º"
        else:
            success_msg += f"–ø–æ –ø—Ä—è–º–æ–π: {road_distance} –∫–º (–º–∞—Ä—à—Ä—É—Ç –ø–æ –¥–æ—Ä–æ–≥–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"

        st.success(success_msg)

# --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ---
st.header("üìã –í–µ–¥–æ–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")

if st.session_state.delivery_data:
    df = pd.DataFrame(st.session_state.delivery_data)
    columns_to_show = [
        "‚Ññ –ø/–ø",
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
        "% –æ—Ç –æ–±—â–µ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏",
        "–í–∏–¥ —Ä–∞–±–æ—Ç",
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞",
        "–ê–¥—Ä–µ—Å",
        "–í–∏–¥ \"—Ñ—Ä–∞–Ω–∫–æ\" –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
        "–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ %",
        "–°—Ç–∞–Ω—Ü–∏–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–±—ã–≤–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª",
        "–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏, –∫–º",
        "–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ %",
        "–°—Ä–µ–¥–Ω—è—è –¥–∞–ª—å–Ω–æ—Å—Ç—å –≤–æ–∑–∫–∏, –∫–º"
    ]
    st.dataframe(df[columns_to_show], use_container_width=True)

    # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Excel
    excel_href = export_to_excel(df, columns_to_show)
    st.markdown(excel_href, unsafe_allow_html=True)

    # --- –õ–µ–≥–µ–Ω–¥–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ ---
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –∏—Ö —Ü–≤–µ—Ç–æ–≤
    materials_used = []
    colors_used = []

    for record in st.session_state.delivery_data:
        material_name = record["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞"]
        color = record["–¶–≤–µ—Ç"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –ø–∞—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª-—Ü–≤–µ—Ç
        material_color_pair = (material_name, color)
        if material_color_pair not in zip(materials_used, colors_used):
            materials_used.append(material_name)
            colors_used.append(color)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if materials_used:
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É—Å–ª–æ–≤–Ω—ã—Ö –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–π
        st.subheader("üìã –£—Å–ª–æ–≤–Ω—ã–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è")

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ (–≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü)
        for material, color in zip(materials_used, colors_used):
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ü–≤–µ—Ç–Ω—ã–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–º –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞
            st.markdown(
                f"<div style='display: flex; align-items: center; margin-bottom: 10px;'>"
                f"<div style='background-color: {color}; width: 30px; height: 10px; margin-right: 10px;'></div>"
                f"<div>{material}</div>"
                f"</div>",
                unsafe_allow_html=True
            )
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        st.info("–î–æ–±–∞–≤—å—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ª–æ–≤–Ω—ã—Ö –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–π")

    # --- –ö–∞—Ä—Ç–∞ ---
    st.header("üó∫Ô∏è –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è —Å—Ö–µ–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏")
    first_obj = st.session_state.delivery_data[0]
    m = folium.Map(location=first_obj["object_coords"], zoom_start=10)

    # –û–±—ä–µ–∫—Ç - —Ç–µ–ø–µ—Ä—å –º–∞–ª–µ–Ω—å–∫–∞—è –∫—Ä–∞—Å–Ω–∞—è —Ç–æ—á–∫–∞
    folium.CircleMarker(
        first_obj["object_coords"],
        radius=5,  # –ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–¥–∏—É—Å
        color="red",
        fill=True,
        fill_opacity=1.0,
        popup="–ú–µ—Å—Ç–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞",
        tooltip="–û–±—ä–µ–∫—Ç"
    ).add_to(m)

    # –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –∏ –º–∞—Ä—à—Ä—É—Ç—ã
    for record in st.session_state.delivery_data:
        sup_coords = record["supplier_coords"]
        color = record["–¶–≤–µ—Ç"]
        idx = record["‚Ññ –ø/–ø"]

        # –£–±—Ä–∞–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä

        # –ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –ø–æ–ø–∞–ø–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        folium.Marker(
            sup_coords,
            popup=f"‚Ññ{idx}: {record['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞']}",
            tooltip=f"–ü–æ—Å—Ç–∞–≤—â–∏–∫ ‚Ññ{idx}",
            icon=folium.DivIcon(html=f"""
            <div style="
                background: {color};
                color: white;
                border-radius: 50%;
                width: 24px;
                height: 24px;
                text-align: center;
                line-height: 24px;
                font-weight: bold;
                font-size: 14px;
                box-shadow: 1px 1px 3px rgba(0,0,0,0.4);
            ">{idx}</div>""")
        ).add_to(m)

        # –ú–∞—Ä—à—Ä—É—Ç
        route_coords = record.get("route_coords")
        if route_coords:
            folium.PolyLine(
                locations=route_coords,
                weight=5,
                color=color,
                opacity=0.8,
                tooltip=f"{record['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞']} ‚Üí {record['–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏, –∫–º']} –∫–º (–ø–æ –¥–æ—Ä–æ–≥–∞–º)"
            ).add_to(m)
        else:
            # –†–µ–∑–µ—Ä–≤ ‚Äî –ø—Ä—è–º–∞—è
            folium.PolyLine(
                locations=[sup_coords, record["object_coords"]],
                weight=3,
                color=color,
                dash_array="10",
                opacity=0.6,
                tooltip=f"{record['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞']} ‚Üí {record['–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏, –∫–º']} –∫–º (–ø–æ –ø—Ä—è–º–æ–π)"
            ).add_to(m)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ä—Ç—ã –≤ session_state –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ HTML
    folium_map = st_folium(m, width="100%", height=600, returned_objects=["last_object_clicked"])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    col1, col2 = st.columns(2)

    with col1:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç—É"):
            # –ü–æ–ª—É—á–∞–µ–º HTML –∫–∞—Ä—Ç—ã
            map_html = m._repr_html_()
            href = save_map_screenshot(map_html)
            if href:
                st.markdown(href, unsafe_allow_html=True)
                st.info("–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞—Ä—Ç—É –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –ª—é–±–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç—ã.")
                st.success("‚úÖ –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã —Å–æ–∑–¥–∞–Ω–∞!")
            else:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã")
                log_error(st.session_state, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã")

    with col2:
        # –û—á–∏—Å—Ç–∫–∞
        if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"):
            log_info(st.session_state, "–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö")
            st.session_state.delivery_data = []
            st.session_state.geocode_cache = {}
            st.rerun()

else:
    st.info("–î–æ–±–∞–≤—å—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é —Å—Ö–µ–º—É.")

    # --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –ø–æ–¥–≤–∞–ª–µ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏) ---
    display_error_stats(st.session_state)

# --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –ø–æ–¥–≤–∞–ª–µ ---
display_error_stats(st.session_state)