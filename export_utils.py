import io
import base64
import pandas as pd

def export_to_excel(df, columns_to_show):
    """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Excel —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö –≤ –≤–∏–¥–µ —Å–∫–∞—á–∏–≤–∞–µ–º–æ–π —Å—Å—ã–ª–∫–∏"""
    # –°–æ–∑–¥–∞–µ–º DataFrame —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
    export_df = df[columns_to_show].copy()

    # –°–æ–∑–¥–∞–µ–º –±—É—Ñ–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è Excel-—Ñ–∞–π–ª–∞
    output = io.BytesIO()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º pandas –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Excel —Ñ–∞–π–ª–∞
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        export_df.to_excel(writer, sheet_name='–í–µ–¥–æ–º–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤', index=False)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç workbook –∏ worksheet
        workbook = writer.book
        worksheet = writer.sheets['–í–µ–¥–æ–º–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤']

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã —Å—Ç–æ–ª–±—Ü–æ–≤
        for i, col in enumerate(export_df.columns):
            column_width = max(export_df[col].astype(str).map(len).max(), len(col) + 2)
            worksheet.set_column(i, i, column_width)

    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞
    processed_data = output.getvalue()

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    b64 = base64.b64encode(processed_data).decode()
    href = f'<a href="data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,{b64}" download="–í–µ–¥–æ–º–æ—Å—Ç—å_–ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤.xlsx">üì• –°–∫–∞—á–∞—Ç—å Excel-—Ñ–∞–π–ª</a>'

    return href

def save_map_screenshot(html_content, width=1200, height=800):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç HTML-–≤–µ—Ä—Å–∏—é –∫–∞—Ä—Ç—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    try:
        # –ö–æ–¥–∏—Ä—É–µ–º HTML –≤ base64 –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        b64 = base64.b64encode(html_content.encode()).decode()
        href = f'<a href="data:text/html;charset=utf-8;base64,{b64}" download="transport_map.html">üì• –°–∫–∞—á–∞—Ç—å HTML –∫–∞—Ä—Ç—ã</a>'
        return href
    except Exception as e:
        return None
